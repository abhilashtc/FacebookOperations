<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="0" total="2" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="360" started-at="2018-06-08T16:54:33Z" finished-at="2018-06-08T16:54:33Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="360" started-at="2018-06-08T16:54:33Z" finished-at="2018-06-08T16:54:33Z">
      <class name="com.facebook.features.ExtentReportTest">
        <test-method status="FAIL" signature="setupExtentReports()[pri:0, instance:com.facebook.features.ExtentReportTest@64c64813]" name="setupExtentReports" is-config="true" duration-ms="0" started-at="2018-06-08T22:24:33Z" finished-at="2018-06-08T22:24:33Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[InputStream cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: InputStream cannot be null
	at javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.aventstack.extentreports.configuration.ConfigLoader.getConfigurationHash(ConfigLoader.java:64)
	at com.aventstack.extentreports.reporter.AbstractReporter.loadXMLConfig(AbstractReporter.java:64)
	at com.aventstack.extentreports.reporter.AbstractReporter.loadXMLConfig(AbstractReporter.java:60)
	at com.facebook.library.ExtentReportLibrary.setupExtentReports(ExtentReportLibrary.java:79)
	at com.facebook.features.ExtentReportTest.setupExtentReports(ExtentReportTest.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.TestRunner.beforeRun(TestRunner.java:656)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.TestNG.privateMain(TestNG.java:1385)
	at org.testng.TestNG.main(TestNG.java:1354)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupExtentReports -->
        <test-method status="SKIP" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.facebook.features.ExtentReportTest@64c64813]" name="captureStatus" is-config="true" duration-ms="0" started-at="2018-06-08T22:24:33Z" finished-at="2018-06-08T22:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method status="SKIP" signature="register(java.lang.reflect.Method)[pri:0, instance:com.facebook.features.ExtentReportTest@64c64813]" name="register" is-config="true" duration-ms="0" started-at="2018-06-08T22:24:33Z" finished-at="2018-06-08T22:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method status="SKIP" signature="cleanUp()[pri:0, instance:com.facebook.features.ExtentReportTest@64c64813]" name="cleanUp" is-config="true" duration-ms="0" started-at="2018-06-08T22:24:33Z" finished-at="2018-06-08T22:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="SKIP" signature="testThree()[pri:0, instance:com.facebook.features.ExtentReportTest@64c64813]" name="testThree" duration-ms="0" started-at="2018-06-08T22:24:33Z" finished-at="2018-06-08T22:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testThree -->
        <test-method status="SKIP" signature="captureStatus(org.testng.ITestResult)[pri:0, instance:com.facebook.features.ExtentReportTest@64c64813]" name="captureStatus" is-config="true" duration-ms="0" started-at="2018-06-08T22:24:33Z" finished-at="2018-06-08T22:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureStatus -->
        <test-method status="SKIP" signature="register(java.lang.reflect.Method)[pri:0, instance:com.facebook.features.ExtentReportTest@64c64813]" name="register" is-config="true" duration-ms="0" started-at="2018-06-08T22:24:33Z" finished-at="2018-06-08T22:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register -->
        <test-method status="SKIP" signature="testOne()[pri:0, instance:com.facebook.features.ExtentReportTest@64c64813]" name="testOne" duration-ms="0" started-at="2018-06-08T22:24:33Z" finished-at="2018-06-08T22:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOne -->
        <test-method status="SKIP" signature="afterSuite()[pri:0, instance:com.facebook.features.ExtentReportTest@64c64813]" name="afterSuite" is-config="true" duration-ms="0" started-at="2018-06-08T22:24:33Z" finished-at="2018-06-08T22:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.facebook.features.ExtentReportTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
